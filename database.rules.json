{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",

    "lobbies": {
      ".indexOn": ["status", "createdAt", "hostUid", "updatedAt"],

      "$lobbyCode": {
        ".read": "auth != null && (root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists() || root.child('lobbies/' + $lobbyCode + '/status').val() == 'waiting')",

        ".write": "auth != null && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists()",

        "hostUid": {
          ".read": true,
          ".validate": "newData.isString()"
        },

        "status": {
          ".read": true,
          ".validate": "newData.isString() && newData.val().matches(/^(waiting|starting|started|ended)$/) && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()"
        },

        "maxPlayers": {
          ".read": true,
          ".validate": "newData.isNumber() && newData.val() >= 2 && newData.val() <= 8 && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()"
        },

        "createdAt": { ".read": true, ".validate": "newData.isString()" },
        "updatedAt": { ".read": true, ".validate": "newData.isString()" },

        "settings": {
          ".read": true,
          ".write": "auth != null && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()",
          "rounds": {
            ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 10"
          },
          "timeLimit": {
            ".validate": "newData.isNumber() && newData.val() >= 30 && newData.val() <= 300 && (newData.val() % 15) == 0"
          },
          "categories": {
            ".validate": "newData.hasChildren() || newData.isString()"
          }
        },

        "players": {
          ".indexOn": ["joinedAt", "isHost", "status", "lastSeen"],
          "$playerUid": {
            ".read": "auth != null && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists()",
            ".write": "auth != null && $playerUid == auth.uid && ( !data.exists() ? (root.child('lobbies/' + $lobbyCode + '/status').val() == 'waiting' && !root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists()) : root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists() )",
            "displayName": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 40"
            },
            "avatarId": { ".validate": "newData.isString()" },
            "profileURL": { ".validate": "newData.isString()" },
            "joinedAt": { ".validate": "newData.isString()" },
            "isHost": {
              ".validate": "newData.isBoolean() && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()"
            },
            "score": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "status": { ".validate": "newData.isString()" },
            "lastSeen": { ".validate": "newData.isString()" }
          }
        },

        "gameState": {
          ".read": "auth != null && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists()",
          ".write": "auth != null && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()",

          "currentRound": {
            ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 10"
          },
          "phase": {
            ".validate": "newData.isString() && newData.val().matches(/^(submission|voting|results|game_over)$/)"
          },
          "phaseStartTime": { ".validate": "newData.isString()" },
          "currentSituation": { ".validate": "newData.isString()" },

          "submissions": {
            "$submissionPlayerUid": {
              ".write": "auth != null && auth.uid == $submissionPlayerUid && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists() && root.child('lobbies/' + $lobbyCode + '/gameState/phase').val() == 'submission' && !data.exists()",
              "cardId": { ".validate": "newData.isString()" },
              "caption": {
                ".validate": "newData.isString() || newData.val() == null"
              },
              "submittedAt": { ".validate": "newData.isString()" }
            }
          },

          "votes": {
            "$voterUid": {
              ".write": "auth != null && auth.uid == $voterUid && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists() && root.child('lobbies/' + $lobbyCode + '/gameState/phase').val() == 'voting' && !data.exists()",
              ".validate": "newData.isString() && newData.val() != $voterUid && root.child('lobbies/' + $lobbyCode + '/gameState/submissions/' + newData.val()).exists()"
            }
          },

          "roundResults": {
            ".write": "auth != null && auth.uid == root.child('lobbies/' + $lobbyCode + '/hostUid').val()",
            "winner": { ".validate": "newData.isString()" },
            "votes": { ".validate": "newData.isNumber() || newData.isMap()" },
            "winningSubmission": {
              "cardId": { ".validate": "newData.isString()" },
              "caption": {
                ".validate": "newData.isString() || newData.val() == null"
              }
            }
          }
        },

        "chat": {
          ".indexOn": ["timestamp"],
          ".read": "auth != null && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists()",
          "$messageId": {
            ".write": "auth != null && root.child('lobbies/' + $lobbyCode + '/players/' + auth.uid).exists() && newData.child('playerId').val() == auth.uid",
            "playerId": {
              ".validate": "newData.isString() && newData.val() == auth.uid"
            },
            "playerName": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 40"
            },
            "message": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 500"
            },
            "timestamp": { ".validate": "newData.isString()" },
            "type": { ".validate": "newData.isString()" }
          }
        }
      }
    },

    "playerSessions": {
      ".indexOn": ["lastActivity", "connectionStatus"],
      "$playerUid": {
        ".read": "auth != null && auth.uid == $playerUid",
        ".write": "auth != null && auth.uid == $playerUid",
        "currentLobby": {
          ".validate": "newData.isString() || newData.val() == null"
        },
        "lastActivity": { ".validate": "newData.isString()" },
        "connectionStatus": {
          ".validate": "newData.isString() && newData.val().matches(/^(online|offline)$/)"
        }
      }
    },

    "rateLimits": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        ".write": "auth != null && auth.uid == $userId"
      }
    }
  }
}
